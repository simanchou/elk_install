# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

# nginx log pipeline

input {
  beats {
    port => 5066
    ssl => true
    ssl_certificate_authorities => ["/opt/ssl/logstash/ca.pem"]
    ssl_certificate => "/opt/ssl/logstash/logstash.crt"
    ssl_key => "/opt/ssl/logstash/logstash.p8"
    ssl_verify_mode => "force_peer"
  }
}

filter {
  if [http_user_agent] == "Go-http-client/1.1" { drop{ } }
  if [log_type] == "http" {
    grok {
      #match => ["domain", "\.(?<tld>(\w*\.(?:com\.cn|cn|com|net|top|cc|vip)))"]
      match => ["domain", "(?<tld>(\w*\.(?:com\.cn|cn|com|net|top|cc|vip)))"]
    }
    geoip {
      source => "[client]"
    }
    if ![geoip][region_name] {
      mutate { add_field => { "[geoip][region_name]" => "Unknow" } }
    }
    useragent {
      source => "http_user_agent"
      target => "ua"
    }
    mutate {
      convert => {
        "upstream_status" => "integer"
        "upstreamtime" => "float"
      }
    }
    date {
        match => [ "timestamp", "ISO8601" ]
    }
  }

  if [log_type] == "stream" {
    geoip {
      source => "[client]"
    }
    if ![geoip][region_name] {
      mutate { add_field => { "[geoip][region_name]" => "Unknow" } }
    }
  }
  
}

output {
  if [log_type] == "http" {
    elasticsearch {
      hosts => ["http://es1:9200"]
      index => "logstash-nginx-lb_%{+YYYY.MM.dd}"
    }
  } else if [log_type] == "stream" {
    elasticsearch {
      hosts => ["http://es1:9200"]
      index => "logstash-nginx-stream_%{+YYYY.MM.dd}"
    }
  } else {
    elasticsearch {
      hosts => ["http://es1:9200"]
      index => "logstash-nginx_%{+YYYY.MM.dd}"
    }
  }
}
