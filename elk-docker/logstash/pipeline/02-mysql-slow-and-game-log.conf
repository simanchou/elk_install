

# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

# mysql slow log pipeline

input {
  beats {
    port => 5067
  }
}

filter {

  mutate {
    convert => {
      "project" => "string"
    }
  }

  if [log_type] == "mysql-error" {
    grok {
      match => { "message" => ["%{TIMESTAMP_ISO8601:mysql_timestamp} %{GREEDYDATA}"] }
      remove_field => "message"
    }
    date {
      match => ["mysql_timestamp", "ISO8601"]
      timezone => "UTC"
      target => "@timestamp"
      remove_field => ["mysql_timestamp"]
    }
  }

  if [log_type] == "mysql-slow" {
    grok {
      match => { "message" => ["(?m)^#\s+Time:\s+%{TIMESTAMP_ISO8601:slow_timestamp}\n(?m)^# User@Host: %{USER:mysql_user}\[[^\]]+\] @ (?:(?<mysql_clienthost>\S*) )?\[(\S|(?:%{IP:mysql_clientip}))?\]\s+Id:\s+%{NUMBER:mysql_process_id:int}\s*# Query_time: %{NUMBER:mysql_query_time:float}\s+Lock_time: %{NUMBER:mysql_lock_time:float}\s+Rows_sent: %{NUMBER:mysql_rows_sent:int}\s+Rows_examined: %{NUMBER:mysql_rows_examined:int}\n(?:use %{DATA:mysql_database};\s*)?SET timestamp=%{NUMBER:mysql_timestamp};\s*(?<mysql_sql>(?<mysql_action>\w+)\s+.*)%{GREEDYDATA}"] }
      remove_field => "message"
    }
    date {
      match => ["slow_timestamp", "ISO8601"]
      timezone => "UTC"
      target => "@timestamp"
      remove_field => ["slow_timestamp"]
    }
   # drop args which in sql
   mutate {
     add_field => {"mysql_sql_noargs" => "%{mysql_sql}"}
   }
   mutate {
     gsub => [
         "mysql_sql_noargs", "'.+?'", "",
         "mysql_sql_noargs", "-?\d*\.{0,1}\d+", ""
     ]
   }
  }

  if [log_type] == "game-dbproxy" {
    ruby {
        code => "event.set('log_rec_time', Time.now());"
    }
    mutate {
      add_field => {"log_file_path" => "%{[log][file][path]}"}
    }
    grok {
      match => { "message" => "(?m)(?<log_time>^\d+:\d+\:\d+\:\d+)\[(?<level>[A-Z]{4})\](?m)%{GREEDYDATA:log_msg}" }
      #remove_field => "log_msg"
      remove_field => "message"
    }
    grok {
      match => { "log_file_path" => "(?<log_path>%{GREEDYDATA})\/(?<log_date>\d+)\.log" }
    }
    mutate {
        add_field => {"log_src_time" => "%{[log_date]} %{[log_time]} +08:00"}
        remove_field => ["log_file_path","log_file_name","log_date","log_time"]
        rename => ["log_msg", "msg" ]
    }
    date {
        match => [ "log_src_time", "yyyyMMdd HH:mm:ss:SSS ZZ" ]
    }
  }
  
  if [log_type] == "game" {
    grok {
      match => { "message" => "(?m)^\[(?<log_time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3})\] \[(?<logger>\S*)\] \[(?<level>\S*)\] (\s|\[(?<file>\S*)\])?(\s|\[(?<space>\S*)\])?%{GREEDYDATA:msg}" }
      remove_field => "message"
    }
    mutate {
        add_field => {"log_src_time" => "%{[log_time]} +08:00"}
    }
    date {
        match => [ "log_src_time", "yyyy-MM-dd HH:mm:ss.SSS ZZ" ]
        remove_field => "log_src_time"
    }
  }
}


output {
  if [log_type] == "game" {
    elasticsearch {
      hosts => ["http://zentao:9200"]
      manage_template => false
      index => "game_%{+YYYY.MM.dd}"
    }
  }
  else if [log_type] == "game-dbproxy" {
    elasticsearch {
      hosts => ["http://zentao:9200"]
      manage_template => false
      index => "dbproxy_%{+YYYY.MM.dd}"
    }
  }
  else if [log_type] == "api-php" {
    elasticsearch {
      hosts => ["http://zentao:9200"]
      manage_template => false
      index => "api-php_%{+YYYY.MM.dd}"
    }
  }
  else if [log_type] == "api-nginx" {
    elasticsearch {
      hosts => ["http://zentao:9200"]
      manage_template => false
      index => "api-nginx_%{+YYYY.MM.dd}"
    }
  }
  else if [log_type] == "client-app" {
    elasticsearch {
      hosts => ["http://zentao:9200"]
      manage_template => false
      index => "client-app_%{+YYYY.MM.dd}"
    }
  } 
  else if [log_type] == "mysql-slow" {
    elasticsearch {
      hosts => ["http://zentao:9200"]
      manage_template => false
      index => "mysql-slow_%{+YYYY.MM.dd}"
    }
  } 
  else {
    elasticsearch {
      hosts => ["http://zentao:9200"]
      manage_template => false
      index => "logstash_%{+YYYY.MM.dd}"
    }
  }
}
